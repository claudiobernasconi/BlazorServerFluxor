@using Fluxor
@using Fluxor.Blazor.Web.Components

@inherits FluxorComponent

@page "/"

@inject IState<ShoppingCartState> ShoppingCartState
@inject IDispatcher Dispatcher

<PageTitle>Home</PageTitle>

<h1>Products</h1>
<table style="width: 500px;">
    <thead>
        <tr>
            <th>Product</th>
            <th>Buy</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Products)
        {
            <tr>
                <td>@product.Description</td>
                <td><button type="button" @onclick="() => AddToCart(product)">Add to cart</button></td>
            </tr>
        }
    </tbody>
</table>

<h2 style="margin-top: 50px;">Shopping Cart</h2>
<div>Items in cart: @ShoppingCartState.Value.ItemCount</div>
<table style="width: 500px;">
    <thead>
        <tr>
            <th>Quantity</th>
            <th>Product</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in ShoppingCart.GroupBy(product => product.ProductId))
        {
            <tr>
                <td>@product.Count()</td>
                <td>@product.First().Description</td>
            </tr>
        }
    </tbody>
</table>

@code {
    public record Product(int ProductId, string Description);

    public IEnumerable<Product> Products { get; set; } = new List<Product> { new Product(1, "Gaming Computer") };
    public IEnumerable<Product> ShoppingCart { get; set; } = new List<Product>();

    public void AddToCart(Product product)
    {
        var list = new List<Product>();
        list.AddRange(ShoppingCart);
        list.Add(product);

        ShoppingCart = list;

        var action = new AddToCartAction();
        Dispatcher.Dispatch(action);
    }
}

